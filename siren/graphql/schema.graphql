schema {
  query: Query
  mutation: Mutation
}

type Query {
  me: User
  user(input: UserAuthInput!): User
  users: [User!]
  sources: [Source!]
}

input UserAuthInput {
  username: String!
  password: String!
}

type User {
  id: ID!
  username: String!
  sfAccessToken: String
  tracks: [Track!]
}

type Track {
  id: ID!
  name: String!
  source: Source!
  startSec: Float
  endSec: Float
}

union Source = SfSource | YtSource

type SfSource {
  id: ID!
  spotifyUri: String!
}

type YtSource {
  id: ID!
  videoUrl: String!
  streamUrl: String!
}

type Mutation {
  register(input: RegisterInput!): User!
  addSfSource(input: AddSfSourceInput!): SfSource!
  removeSfSource(input: RemoveSfSourceInput!): Boolean!
  addYtSource(input: AddYtSourceInput!): YtSource!
  removeYtSource(input: RemoveYtSourceInput!): Boolean!
  addTrack(input: AddTrackInput!): Track
  removeTrack(input: RemoveTrackInput!): Boolean!
}

input AddYtSourceInput {
  name: String
  spotifyUri: String!
}

input RemoveSfSourceInput {
  id: ID!
}

input AddYtSourceInput {
  name: String
  videoUrl: String!
}

input RemoveYtSourceInput {
  id: ID!
}

input AddTrackInput {
  userId: ID!
  name: String!
  sourceId: ID!
  startSec: Float
  endSec: Float
}

input RemoveTrackInput {
  userId: ID!
  trackId: ID!
}
